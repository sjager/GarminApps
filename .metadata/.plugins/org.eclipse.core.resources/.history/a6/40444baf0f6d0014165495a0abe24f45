using Toybox.WatchUi as Ui;
using Toybox.Graphics as Gfx;
using Toybox.Lang as Lang;
using Toybox.Application as App;
using Toybox.Timer as Timer;

var timer;

class ChooseHomeDelegate extends Ui.BehaviorDelegate
{
	function onPreviousPage()
	{
		timer.stop();
		Ui.popView(Ui.SLIDE_RIGHT);
	}
	
	function onKey(evt)
	{
		timer.stop();
		if(evt.getKey() == Ui.KEY_ENTER)
		{
			var app = App.getApp();
			// get current data from store
			var curCoords = app.getProperty("Current_Coords").toString();
			var curLat = app.getProperty("Current_Coord_Latitude").toString();
			var curLong = app.getProperty("Current_Coord_Longitude").toString();
			// store current data as "home" data
			app.setProperty("Home_Coords", curCoords);
			app.setProperty("Home_Coord_Latitude", curLat);
			app.setProperty("Home_Coord_Longitude", curLong);
			
			Ui.popView(Ui.SLIDE_RIGHT);
		}
	}
}

class ChooseHome extends Ui.View {
	function redraw()
	{
		Ui.requestUpdate();
	}

    //! Refresh this view every half second
    function onShow() {
    	timer = new Timer.Timer();
    	timer.start( method(:redraw), 500, true);
    }

    //! Update the view
	function onUpdate(dc)
	{
		dc.clear();
	
		// Set background color
		dc.setColor(Gfx.COLOR_DK_GRAY, Gfx.COLOR_DK_GRAY);
		dc.fillRectangle(0, 0, dc.getWidth(), dc.getHeight());
		
		// Get data from data store
		var app = App.getApp();
		var currentCoords = app.getProperty("Current_Coords").toString();
		
		// Draw text
		dc.setColor(Gfx.COLOR_BLUE, Gfx.COLOR_TRANSPARENT);
		dc.drawText(dc.getWidth()/2, dc.getHeight()/3, Gfx.FONT_SMALL, "Choose your home position:", Gfx.TEXT_JUSTIFY_CENTER);
		dc.drawText(dc.getWidth()/2, dc.getHeight()/3*2, Gfx.FONT_SMALL, currentCoords, Gfx.TEXT_JUSTIFY_CENTER);
	}
	
}